// <auto-generated />
using System;
using AppointmentScheduler.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppointmentScheduler.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240909212815_locationDataSeed")]
    partial class locationDataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppointmentScheduler.Domain.Models.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("AppointmentScheduler.Domain.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6b80fea-a94b-4219-a717-155437d5e9f3"),
                            Address = "Avenida la playa edificio colteger piso 17",
                            Name = "Bancolombia sucursal centro"
                        },
                        new
                        {
                            Id = new Guid("6cee7750-2bcf-4bd0-8ed2-bb1fc9195f40"),
                            Address = "Centro comercial mayorca local 102",
                            Name = "Bancolombia sucursal mayorca"
                        });
                });

            modelBuilder.Entity("AppointmentScheduler.Domain.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d06e27e5-8dcf-4a80-92e4-fc9d257ec0a1"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("d85e26e5-7dcf-4a80-92e4-fc9d257ec0b2"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("AppointmentScheduler.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b5f08f2-e97c-4d21-a6e4-ef3fcabf8052"),
                            Cedula = "1152466496",
                            Name = "Luis Alejandro Pérez Abril",
                            RoleId = new Guid("d85e26e5-7dcf-4a80-92e4-fc9d257ec0b2")
                        },
                        new
                        {
                            Id = new Guid("b35aa608-0966-49ea-bb70-2094d7543d09"),
                            Cedula = "9396795",
                            Name = "Jose Eugenio Rodriguez",
                            RoleId = new Guid("d85e26e5-7dcf-4a80-92e4-fc9d257ec0b2")
                        },
                        new
                        {
                            Id = new Guid("41f1dcda-acbd-4587-b25a-7273443002b1"),
                            Cedula = "47438962",
                            Name = "Marta Alejandra Soacha",
                            RoleId = new Guid("d85e26e5-7dcf-4a80-92e4-fc9d257ec0b2")
                        },
                        new
                        {
                            Id = new Guid("885e840a-c9f5-4b32-b2d8-26d16404b5fe"),
                            Cedula = "987654321",
                            Name = "Elkin Dario Sanchez",
                            RoleId = new Guid("d06e27e5-8dcf-4a80-92e4-fc9d257ec0a1")
                        });
                });

            modelBuilder.Entity("AppointmentScheduler.Domain.Models.Appointment", b =>
                {
                    b.HasOne("AppointmentScheduler.Domain.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppointmentScheduler.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AppointmentScheduler.Domain.Models.User", b =>
                {
                    b.HasOne("AppointmentScheduler.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
